<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gesangwu.spider.biz.dao.mapper.KLineMapper" >
  <resultMap id="BaseResultMap" type="com.gesangwu.spider.biz.dao.model.KLine" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="symbol" property="symbol" jdbcType="VARCHAR" />
    <result column="volume" property="volume" jdbcType="BIGINT" />
    <result column="open" property="open" jdbcType="DOUBLE" />
    <result column="close" property="close" jdbcType="DOUBLE" />
    <result column="high" property="high" jdbcType="DOUBLE" />
    <result column="low" property="low" jdbcType="DOUBLE" />
    <result column="change_amount" property="changeAmount" jdbcType="DOUBLE" />
    <result column="percent" property="percent" jdbcType="DOUBLE" />
    <result column="turnrate" property="turnrate" jdbcType="DOUBLE" />
    <result column="ma5" property="ma5" jdbcType="DOUBLE" />
    <result column="ma10" property="ma10" jdbcType="DOUBLE" />
    <result column="ma20" property="ma20" jdbcType="DOUBLE" />
    <result column="ma30" property="ma30" jdbcType="DOUBLE" />
    <result column="trade_date" property="tradeDate" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="yesterday_close" property="yesterdayClose" jdbcType="DOUBLE" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, symbol, volume, open, close, high, low, change_amount, percent, turnrate, ma5, 
    ma10, ma20, ma30, trade_date, amount, yesterday_close, gmt_create
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gesangwu.spider.biz.dao.model.KLineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from k_line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset != null and offset > -1" >
      limit ${offset},${rows}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from k_line
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from k_line
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gesangwu.spider.biz.dao.model.KLineExample" >
    delete from k_line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gesangwu.spider.biz.dao.model.KLine" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into k_line (symbol, volume, open, 
      close, high, low, change_amount, 
      percent, turnrate, ma5, 
      ma10, ma20, ma30, trade_date, 
      amount, yesterday_close, gmt_create
      )
    values (#{symbol,jdbcType=VARCHAR}, #{volume,jdbcType=BIGINT}, #{open,jdbcType=DOUBLE}, 
      #{close,jdbcType=DOUBLE}, #{high,jdbcType=DOUBLE}, #{low,jdbcType=DOUBLE}, #{changeAmount,jdbcType=DOUBLE}, 
      #{percent,jdbcType=DOUBLE}, #{turnrate,jdbcType=DOUBLE}, #{ma5,jdbcType=DOUBLE}, 
      #{ma10,jdbcType=DOUBLE}, #{ma20,jdbcType=DOUBLE}, #{ma30,jdbcType=DOUBLE}, #{tradeDate,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DOUBLE}, #{yesterdayClose,jdbcType=DOUBLE}, #{gmtCreate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gesangwu.spider.biz.dao.model.KLine" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into k_line
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="symbol != null" >
        symbol,
      </if>
      <if test="volume != null" >
        volume,
      </if>
      <if test="open != null" >
        open,
      </if>
      <if test="close != null" >
        close,
      </if>
      <if test="high != null" >
        high,
      </if>
      <if test="low != null" >
        low,
      </if>
      <if test="changeAmount != null" >
        change_amount,
      </if>
      <if test="percent != null" >
        percent,
      </if>
      <if test="turnrate != null" >
        turnrate,
      </if>
      <if test="ma5 != null" >
        ma5,
      </if>
      <if test="ma10 != null" >
        ma10,
      </if>
      <if test="ma20 != null" >
        ma20,
      </if>
      <if test="ma30 != null" >
        ma30,
      </if>
      <if test="tradeDate != null" >
        trade_date,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="yesterdayClose != null" >
        yesterday_close,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="symbol != null" >
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=BIGINT},
      </if>
      <if test="open != null" >
        #{open,jdbcType=DOUBLE},
      </if>
      <if test="close != null" >
        #{close,jdbcType=DOUBLE},
      </if>
      <if test="high != null" >
        #{high,jdbcType=DOUBLE},
      </if>
      <if test="low != null" >
        #{low,jdbcType=DOUBLE},
      </if>
      <if test="changeAmount != null" >
        #{changeAmount,jdbcType=DOUBLE},
      </if>
      <if test="percent != null" >
        #{percent,jdbcType=DOUBLE},
      </if>
      <if test="turnrate != null" >
        #{turnrate,jdbcType=DOUBLE},
      </if>
      <if test="ma5 != null" >
        #{ma5,jdbcType=DOUBLE},
      </if>
      <if test="ma10 != null" >
        #{ma10,jdbcType=DOUBLE},
      </if>
      <if test="ma20 != null" >
        #{ma20,jdbcType=DOUBLE},
      </if>
      <if test="ma30 != null" >
        #{ma30,jdbcType=DOUBLE},
      </if>
      <if test="tradeDate != null" >
        #{tradeDate,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="yesterdayClose != null" >
        #{yesterdayClose,jdbcType=DOUBLE},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gesangwu.spider.biz.dao.model.KLineExample" resultType="java.lang.Integer" >
    select count(*) from k_line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update k_line
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.symbol != null" >
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.volume != null" >
        volume = #{record.volume,jdbcType=BIGINT},
      </if>
      <if test="record.open != null" >
        open = #{record.open,jdbcType=DOUBLE},
      </if>
      <if test="record.close != null" >
        close = #{record.close,jdbcType=DOUBLE},
      </if>
      <if test="record.high != null" >
        high = #{record.high,jdbcType=DOUBLE},
      </if>
      <if test="record.low != null" >
        low = #{record.low,jdbcType=DOUBLE},
      </if>
      <if test="record.changeAmount != null" >
        change_amount = #{record.changeAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.percent != null" >
        percent = #{record.percent,jdbcType=DOUBLE},
      </if>
      <if test="record.turnrate != null" >
        turnrate = #{record.turnrate,jdbcType=DOUBLE},
      </if>
      <if test="record.ma5 != null" >
        ma5 = #{record.ma5,jdbcType=DOUBLE},
      </if>
      <if test="record.ma10 != null" >
        ma10 = #{record.ma10,jdbcType=DOUBLE},
      </if>
      <if test="record.ma20 != null" >
        ma20 = #{record.ma20,jdbcType=DOUBLE},
      </if>
      <if test="record.ma30 != null" >
        ma30 = #{record.ma30,jdbcType=DOUBLE},
      </if>
      <if test="record.tradeDate != null" >
        trade_date = #{record.tradeDate,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.yesterdayClose != null" >
        yesterday_close = #{record.yesterdayClose,jdbcType=DOUBLE},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update k_line
    set id = #{record.id,jdbcType=BIGINT},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      volume = #{record.volume,jdbcType=BIGINT},
      open = #{record.open,jdbcType=DOUBLE},
      close = #{record.close,jdbcType=DOUBLE},
      high = #{record.high,jdbcType=DOUBLE},
      low = #{record.low,jdbcType=DOUBLE},
      change_amount = #{record.changeAmount,jdbcType=DOUBLE},
      percent = #{record.percent,jdbcType=DOUBLE},
      turnrate = #{record.turnrate,jdbcType=DOUBLE},
      ma5 = #{record.ma5,jdbcType=DOUBLE},
      ma10 = #{record.ma10,jdbcType=DOUBLE},
      ma20 = #{record.ma20,jdbcType=DOUBLE},
      ma30 = #{record.ma30,jdbcType=DOUBLE},
      trade_date = #{record.tradeDate,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DOUBLE},
      yesterday_close = #{record.yesterdayClose,jdbcType=DOUBLE},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gesangwu.spider.biz.dao.model.KLine" >
    update k_line
    <set >
      <if test="symbol != null" >
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="volume != null" >
        volume = #{volume,jdbcType=BIGINT},
      </if>
      <if test="open != null" >
        open = #{open,jdbcType=DOUBLE},
      </if>
      <if test="close != null" >
        close = #{close,jdbcType=DOUBLE},
      </if>
      <if test="high != null" >
        high = #{high,jdbcType=DOUBLE},
      </if>
      <if test="low != null" >
        low = #{low,jdbcType=DOUBLE},
      </if>
      <if test="changeAmount != null" >
        change_amount = #{changeAmount,jdbcType=DOUBLE},
      </if>
      <if test="percent != null" >
        percent = #{percent,jdbcType=DOUBLE},
      </if>
      <if test="turnrate != null" >
        turnrate = #{turnrate,jdbcType=DOUBLE},
      </if>
      <if test="ma5 != null" >
        ma5 = #{ma5,jdbcType=DOUBLE},
      </if>
      <if test="ma10 != null" >
        ma10 = #{ma10,jdbcType=DOUBLE},
      </if>
      <if test="ma20 != null" >
        ma20 = #{ma20,jdbcType=DOUBLE},
      </if>
      <if test="ma30 != null" >
        ma30 = #{ma30,jdbcType=DOUBLE},
      </if>
      <if test="tradeDate != null" >
        trade_date = #{tradeDate,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="yesterdayClose != null" >
        yesterday_close = #{yesterdayClose,jdbcType=DOUBLE},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gesangwu.spider.biz.dao.model.KLine" >
    update k_line
    set symbol = #{symbol,jdbcType=VARCHAR},
      volume = #{volume,jdbcType=BIGINT},
      open = #{open,jdbcType=DOUBLE},
      close = #{close,jdbcType=DOUBLE},
      high = #{high,jdbcType=DOUBLE},
      low = #{low,jdbcType=DOUBLE},
      change_amount = #{changeAmount,jdbcType=DOUBLE},
      percent = #{percent,jdbcType=DOUBLE},
      turnrate = #{turnrate,jdbcType=DOUBLE},
      ma5 = #{ma5,jdbcType=DOUBLE},
      ma10 = #{ma10,jdbcType=DOUBLE},
      ma20 = #{ma20,jdbcType=DOUBLE},
      ma30 = #{ma30,jdbcType=DOUBLE},
      trade_date = #{tradeDate,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      yesterday_close = #{yesterdayClose,jdbcType=DOUBLE},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
    insert into k_line (symbol, volume, open, 
      close, high, low, change_amount, 
      percent, turnrate, ma5, 
      ma10, ma20, ma30, trade_date, 
      amount, yesterday_close, gmt_create
      )
    values 
    <foreach collection="list" index="index" item="kLine" separator=",">
    (#{kLine.symbol,jdbcType=VARCHAR}, #{kLine.volume,jdbcType=BIGINT}, #{kLine.open,jdbcType=DOUBLE}, 
      #{kLine.close,jdbcType=DOUBLE}, #{kLine.high,jdbcType=DOUBLE}, #{kLine.low,jdbcType=DOUBLE}, #{kLine.changeAmount,jdbcType=DOUBLE}, 
      #{kLine.percent,jdbcType=DOUBLE}, #{kLine.turnrate,jdbcType=DOUBLE}, #{kLine.ma5,jdbcType=DOUBLE}, #{kLine.ma10,jdbcType=DOUBLE}, #{kLine.ma20,jdbcType=DOUBLE}, 
      #{kLine.ma30,jdbcType=DOUBLE}, #{kLine.tradeDate,jdbcType=VARCHAR}, 
      #{kLine.amount,jdbcType=DOUBLE}, #{kLine.yesterdayClose,jdbcType=DOUBLE}, #{kLine.gmtCreate,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>
</mapper>